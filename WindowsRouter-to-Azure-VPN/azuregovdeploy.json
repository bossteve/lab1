{
"$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptiondeploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "TimeZone": {
      "type": "string",
      "defaultValue": "Eastern Standard Time",
      "allowedValues": [
        "Afghanistan Standard Time",
        "Alaskan Standard Time",
        "Aleutian Standard Time",
        "Altai Standard Time",
        "Arab Standard Time",
        "Arabian Standard Time",
        "Arabic Standard Time",
        "Argentina Standard Time",
        "Astrakhan Standard Time",
        "Atlantic Standard Time",
        "AUS Central Standard Time",
        "Aus Central W. Standard Time",
        "AUS Eastern Standard Time",
        "Azerbaijan Standard Time",
        "Azores Standard Time",
        "Bahia Standard Time",
        "Bangladesh Standard Time",
        "Belarus Standard Time",
        "Bougainville Standard Time",
        "Canada Central Standard Time",
        "Cape Verde Standard Time",
        "Caucasus Standard Time",
        "Cen. Australia Standard Time",
        "Central America Standard Time",
        "Central Asia Standard Time",
        "Central Brazilian Standard Time",
        "Central Europe Standard Time",
        "Central European Standard Time",
        "Central Pacific Standard Time",
        "Central Standard Time (Mexico)",
        "Central Standard Time",
        "Chatham Islands Standard Time",
        "China Standard Time",
        "Cuba Standard Time",
        "Dateline Standard Time",
        "E. Africa Standard Time",
        "E. Australia Standard Time",
        "E. Europe Standard Time",
        "E. South America Standard Time",
        "Easter Island Standard Time",
        "Eastern Standard Time (Mexico)",
        "Eastern Standard Time",
        "Egypt Standard Time",
        "Ekaterinburg Standard Time",
        "Fiji Standard Time",
        "FLE Standard Time",
        "Georgian Standard Time",
        "GMT Standard Time",
        "Greenland Standard Time",
        "Greenwich Standard Time",
        "GTB Standard Time",
        "Haiti Standard Time",
        "Hawaiian Standard Time",
        "India Standard Time",
        "Iran Standard Time",
        "Israel Standard Time",
        "Jordan Standard Time",
        "Kaliningrad Standard Time",
        "Korea Standard Time",
        "Libya Standard Time",
        "Line Islands Standard Time",
        "Lord Howe Standard Time",
        "Magadan Standard Time",
        "Magallanes Standard Time",
        "Marquesas Standard Time",
        "Mauritius Standard Time",
        "Middle East Standard Time",
        "Montevideo Standard Time",
        "Morocco Standard Time",
        "Mountain Standard Time (Mexico)",
        "Mountain Standard Time",
        "Myanmar Standard Time",
        "N. Central Asia Standard Time",
        "Namibia Standard Time",
        "Nepal Standard Time",
        "New Zealand Standard Time",
        "Newfoundland Standard Time",
        "Norfolk Standard Time",
        "North Asia East Standard Time",
        "North Asia Standard Time",
        "North Korea Standard Time",
        "Omsk Standard Time",
        "Pacific SA Standard Time",
        "Pacific Standard Time (Mexico)",
        "Pacific Standard Time",
        "Pakistan Standard Time",
        "Paraguay Standard Time",
        "Qyzylorda Standard Time",
        "Romance Standard Time",
        "Russia Time Zone 10",
        "Russia Time Zone 11",
        "Russia Time Zone 3",
        "Russian Standard Time",
        "SA Eastern Standard Time",
        "SA Pacific Standard Time",
        "SA Western Standard Time",
        "Saint Pierre Standard Time",
        "Sakhalin Standard Time",
        "Samoa Standard Time",
        "Sao Tome Standard Time",
        "Saratov Standard Time",
        "SE Asia Standard Time",
        "Singapore Standard Time",
        "South Africa Standard Time",
        "Sri Lanka Standard Time",
        "Sudan Standard Time",
        "Syria Standard Time",
        "Taipei Standard Time",
        "Tasmania Standard Time",
        "Tocantins Standard Time",
        "Tokyo Standard Time",
        "Tomsk Standard Time",
        "Tonga Standard Time",
        "Transbaikal Standard Time",
        "Turkey Standard Time",
        "Turks And Caicos Standard Time",
        "Ulaanbaatar Standard Time",
        "US Eastern Standard Time",
        "US Mountain Standard Time",
        "UTC",
        "UTC+12",
        "UTC+13",
        "UTC-02",
        "UTC-08",
        "UTC-09",
        "UTC-11",
        "Venezuela Standard Time",
        "Vladivostok Standard Time",
        "Volgograd Standard Time",
        "W. Australia Standard Time",
        "W. Central Africa Standard Time",
        "W. Europe Standard Time",
        "W. Mongolia Standard Time",
        "West Asia Standard Time",
        "West Bank Standard Time",
        "West Pacific Standard Time",
        "Yakutsk Standard Time"
      ],      
      "metadata": {
          "description": "Time Zone"
      }
    },   
    "Location2": {
      "type": "string",
      "defaultValue": "USGovTexas",
      "metadata": {
        "description": "Choose Region (Example: USGovTexas)"
      }
    },   
    "Site1RG": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Site1 Resource Groups"
      }
    },            
    "Site2RG": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Site2 Resource Groups"
      }
    },                         
    "adminUsername": {
        "type": "string",
        "metadata": {
            "description": "The name of the Administrator of the new VM and Domain"
        }
    },
    "adminPassword": {
        "type": "securestring",
        "metadata": {
          "description": "The password for the Administrator account of the new VM and Domain"
      }
    },
    "SharedKey": {
        "type": "string",
        "metadata": {
          "description": "Shared Key for VPN Connection"
      }
    },
    "WindowsServerLicenseType": {
      "type": "string",
      "defaultValue": "None",
      "allowedValues": [
        "None",
        "Windows_Server"
      ],      
      "metadata": {
          "description": "Windows Server OS License Type"
      }
    },                          
    "OPNamingConvention": {
      "type": "string",
      "defaultValue": "OP",
      "minLength": 1,
      "maxLength": 4,
      "metadata": {
        "description": "OnPrem Environment Naming Convention"
      }
    }, 
    "AZNamingConvention": {
      "type": "string",
      "defaultValue": "AZ",
      "minLength": 1,
      "maxLength": 4,
      "metadata": {
        "description": "Azure Environment Naming Convention"
      }
    },     
    "VNet1ID": {
      "type": "string",
      "defaultValue": "192.168",
      "metadata": {
        "description": "VNet1 Prefix"
      }
    },   
    "VNet2ID": {
      "type": "string",
      "defaultValue": "10.1",
      "metadata": {
        "description": "VNet1 Prefix"
      }
    },     
    "ROUTEROSVersion": {
        "type": "string",
        "defaultValue": "2019-Datacenter",
        "allowedValues": [
          "2019-Datacenter",
          "2016-Datacenter",
          "2012-R2-Datacenter"
        ],
        "metadata": {
            "description": "Router OS Version"
        }
    },
    "ROUTERVMSize": {
        "type": "string",
        "defaultValue": "Standard_D2s_v3",
        "metadata": {
            "description": "Router VMSize"
        }
    },        
    "AzureOSVersion": {
        "type": "string",
        "defaultValue": "2019-Datacenter",
        "allowedValues": [
          "2019-Datacenter",
          "2016-Datacenter",
          "2012-R2-Datacenter"
        ],
        "metadata": {
            "description": "Azure VM OS Version"
        }
    },
    "AzureVMSize": {
        "type": "string",
        "defaultValue": "Standard_D2s_v3",
        "metadata": {
            "description": "Azure VMSize"
        }
    },            
    "OnPremOSVersion": {
        "type": "string",
        "defaultValue": "2019-Datacenter",
        "allowedValues": [
          "2019-Datacenter",
          "2016-Datacenter",
          "2012-R2-Datacenter"
        ],
        "metadata": {
            "description": "OnPrem VM OS Version"
        }
    },
    "OnPremVMSize": {
        "type": "string",
        "defaultValue": "Standard_D2s_v3",
        "metadata": {
            "description": "OnPrem VMSize"
        }
    },                
    "_artifactsLocation": {
      "type": "string",
      "metadata": {
          "description": "The location of resources, such as templates and DSC modules, that the template depends on"
      },
      "defaultValue": "[deployment().properties.templateLink.uri]"
    },
    "_artifactsLocationSasToken": {
        "type": "securestring",
        "metadata": {
            "description": "Auto-generated token to access _artifactsLocation. Leave it blank unless you need to provide your own value."
        },
        "defaultValue": ""
    }    
  },
  "variables": {
    "vnet1Name": "[concat(parameters('OPNamingConvention'),'-VNet1')]",
    "vnet1Prefix": "[concat(parameters('vnet1ID'),'.0.0/16')]",    
    "vnet1subnet1Name": "[concat(parameters('OPNamingConvention'),'-VNet1-OutsideSubnet')]", 
    "vnet1subnet1Prefix": "[concat(parameters('vnet1ID'),'.1.0/24')]",           
    "vnet1subnet2Name": "[concat(parameters('OPNamingConvention'),'-VNet1-InsideSubnet')]",  
    "vnet1subnet2Prefix": "[concat(parameters('vnet1ID'),'.2.0/24')]",    
    "vnet1BastionsubnetPrefix": "[concat(parameters('vnet1ID'),'.253.0/24')]",                  
    "vnet2Name": "[concat(parameters('AZNamingConvention'),'-VNet1')]",
    "vnet2Prefix": "[concat(parameters('vnet2ID'),'.0.0/16')]",    
    "vnet2GatewaySubnetPrefix": "[concat(parameters('vnet2ID'),'.0.0/24')]",                      
    "vnet2subnet1Name": "[concat(parameters('AZNamingConvention'),'-VNet1-Subnet1')]", 
    "vnet2subnet1Prefix": "[concat(parameters('vnet2ID'),'.1.0/24')]",           
    "vnet2subnet2Name": "[concat(parameters('AZNamingConvention'),'-VNet1-Subnet2')]",  
    "vnet2subnet2Prefix": "[concat(parameters('vnet2ID'),'.2.0/24')]",    
    "vnet2BastionsubnetPrefix": "[concat(parameters('vnet2ID'),'.253.0/24')]",
    "vnet2VNGName": "[concat(parameters('AZNamingConvention'),'-VNet1-VNG')]",                          
    "vnet1LNGName": "[concat(parameters('OPNamingConvention'),'-VNet1-LNG')]",                              
    "ConnectionName": "[concat(parameters('AZNamingConvention'),'-',parameters('OPNamingConvention'))]",    
    "routeTableName": "[concat(parameters('OPNamingConvention'),'-RT')]",                                                                
    "routername": "[concat(parameters('OPNamingConvention'),'-gw-01')]", 
    "router-Outside-IP": "[concat(parameters('vnet1ID'),'.1.',variables('routeroutlastoctet'))]",        
    "router-Inside-IP": "[concat(parameters('vnet1ID'),'.2.',variables('routerinlastoctet'))]",            
    "routeroutlastoctet": "254",        
    "routerinlastoctet": "254",
    "azurevmname": "[concat(parameters('AZNamingConvention'),'-vm1')]", 
    "azurevmIP": "[concat(parameters('vnet2ID'),'.1.',variables('azurevmlastoctet'))]",        
    "azurevmlastoctet": "100",
    "opvmname": "[concat(parameters('OPNamingConvention'),'-vm1')]", 
    "opvmIP": "[concat(parameters('vnet1ID'),'.2.',variables('opvmlastoctet'))]",        
    "opvmlastoctet": "100",
    "NSG1Name": "[concat(parameters('OPNamingConvention'),'-nsg01')]"                    
  },  
  "resources": [
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2019-10-01",
      "name": "CreateSite1RG",
      "location": "[deployment().Location]",
      "properties": {
          "mode": "Incremental",
          "templateLink": {
              "uri": "[uri(parameters('_artifactsLocation'), concat('linkedtemplates/resourcegroup.json', parameters('_artifactsLocationSasToken')))]",
              "contentVersion": "1.0.0.0"
          },
          "parameters": {
              "ResourceGroupName": {
                  "value": "[parameters('Site1RG')]"
              },
              "location": {
                  "value": "[deployment().Location]"
              }            
          }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2019-10-01",
      "name": "CreateSite2RG",
      "location": "[parameters('Location2')]",
      "properties": {
          "mode": "Incremental",
          "templateLink": {
              "uri": "[uri(parameters('_artifactsLocation'), concat('linkedtemplates/resourcegroup.json', parameters('_artifactsLocationSasToken')))]",
              "contentVersion": "1.0.0.0"
          },
          "parameters": {
              "ResourceGroupName": {
                  "value": "[parameters('Site2RG')]"
              },
              "location": {
                  "value": "[parameters('Location2')]"
              }            
          }
      }
    },    
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2019-10-01",
      "name": "OnPremVNet",
      "resourceGroup":  "[parameters('Site1RG')]",
      "dependsOn": [
        "CreateSite1RG"        
      ],              
      "properties": {
          "mode": "Incremental",
          "templateLink": {
              "uri": "[uri(parameters('_artifactsLocation'), concat('linkedtemplates/onpremvnet.json', parameters('_artifactsLocationSasToken')))]",
              "contentVersion": "1.0.0.0"
          },
          "parameters": {
              "vnetName": {
                  "value": "[variables('vnet1Name')]"
              },
              "vnetprefix": {
                  "value": "[variables('vnet1Prefix')]"
              },
              "subnet1Name": {
                  "value": "[variables('vnet1subnet1Name')]"
              },
              "subnet1Prefix": {
                  "value": "[variables('vnet1subnet1Prefix')]"
              },
              "subnet2Name": {
                "value": "[variables('vnet1subnet2Name')]"
              },
              "subnet2Prefix": {
                "value": "[variables('vnet1subnet2Prefix')]"
              },              
              "BastionsubnetPrefix": {
                "value": "[variables('vnet1BastionsubnetPrefix')]"
              },              
              "location": {
                  "value": "[deployment().Location]"
              }
          }
      }
    },    
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2019-10-01",
      "name": "AzureVNet",
      "resourceGroup":  "[parameters('Site2RG')]",
      "dependsOn": [
        "CreateSite2RG"        
      ],              
      "properties": {
          "mode": "Incremental",
          "templateLink": {
              "uri": "[uri(parameters('_artifactsLocation'), concat('linkedtemplates/azurevnet.json', parameters('_artifactsLocationSasToken')))]",
              "contentVersion": "1.0.0.0"
          },
          "parameters": {
              "vnetName": {
                  "value": "[variables('vnet2Name')]"
              },
              "vnetprefix": {
                  "value": "[variables('vnet2Prefix')]"
              },
              "GatewaySubnetPrefix": {
                "value": "[variables('vnet2GatewaySubnetPrefix')]"
              },              
              "subnet1Name": {
                  "value": "[variables('vnet2subnet1Name')]"
              },
              "subnet1Prefix": {
                  "value": "[variables('vnet2subnet1Prefix')]"
              },
              "subnet2Name": {
                "value": "[variables('vnet2subnet2Name')]"
              },
              "subnet2Prefix": {
                "value": "[variables('vnet2subnet2Prefix')]"
              },              
              "BastionsubnetPrefix": {
                "value": "[variables('vnet2BastionsubnetPrefix')]"
              },              
              "location": {
                  "value": "[parameters('Location2')]"
              }
          }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2019-10-01",
      "name": "DeployAzureVM",
      "resourceGroup":  "[parameters('Site2RG')]",      
      "dependsOn": [
        "AzureVNet"
      ],      
      "properties": {
          "mode": "Incremental",
          "templateLink": {
              "uri": "[uri(parameters('_artifactsLocation'), concat('linkedtemplates/1nic-1disk-vm.json', parameters('_artifactsLocationSasToken')))]",
              "contentVersion": "1.0.0.0"
          },
          "parameters": {
              "computerName": {
                  "value": "[variables('azurevmname')]"
              },
              "computerIP": {
                  "value": "[variables('azurevmIP')]"
              },
              "Publisher": {
                  "value": "MicrosoftWindowsServer"
              },
              "Offer": {
                  "value": "WindowsServer"
              },
              "OSVersion": {
                "value": "[parameters('AzureOSVersion')]"
              },              
              "LicenseType": {
                "value": "[parameters('WindowsServerLicenseType')]"
              },            
              "VMSize": {
                "value": "[parameters('AzureVMSize')]"
              },
              "vnetName": {
                "value": "[variables('vnet2Name')]"
              },            
              "subnetName": {
                "value": "[variables('vnet2subnet1Name')]"
              },            
              "adminUsername": {
                "value": "[parameters('adminUsername')]"
              },                                                                                                            
              "adminPassword": {
                "value": "[parameters('adminPassword')]"
              },                                                                                                                                        
              "location": {
                  "value": "[parameters('Location2')]"
              }
          }
      }
    },    
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2019-10-01",
      "name": "AzureVNetVNG",
      "resourceGroup":  "[parameters('Site2RG')]",
      "dependsOn": [
        "AzureVNet"        
      ],              
      "properties": {
          "mode": "Incremental",
          "templateLink": {
              "uri": "[uri(parameters('_artifactsLocation'), concat('linkedtemplates/vpngateway.json', parameters('_artifactsLocationSasToken')))]",
              "contentVersion": "1.0.0.0"
          },
          "parameters": {
              "Name": {
                  "value": "[variables('vnet2VNGName')]"
              },
              "vnetName": {
                  "value": "[variables('vnet2Name')]"
              },            
              "location": {
                  "value": "[parameters('Location2')]"
              }
          }
      }
    },        
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2019-10-01",
      "name": "OnPremBastionHost",
      "resourceGroup":  "[parameters('Site1RG')]",      
      "dependsOn": [
        "OnPremVNet"
      ],
      "properties": {
          "mode": "Incremental",
          "templateLink": {
              "uri": "[uri(parameters('_artifactsLocation'), concat('linkedtemplates/bastionhost.json', parameters('_artifactsLocationSasToken')))]",
              "contentVersion": "1.0.0.0"
          },
          "parameters": {
              "publicIPAddressName": {
                "value": "[concat(variables('vnet1Name'),'-Bastion-pip')]"
              },
              "AllocationMethod": {
                "value": "Static"
              },              
              "vnetName": {
                  "value": "[variables('vnet1Name')]"
              },
              "subnetName": {
                  "value": "AzureBastionSubnet"
              },
              "location": {
                  "value": "[deployment().Location]"
              }
          }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2019-10-01",
      "name": "AzureBastionHost",
      "resourceGroup":  "[parameters('Site2RG')]",      
      "dependsOn": [
        "AzureVNet"
      ],
      "properties": {
          "mode": "Incremental",
          "templateLink": {
              "uri": "[uri(parameters('_artifactsLocation'), concat('linkedtemplates/bastionhost.json', parameters('_artifactsLocationSasToken')))]",
              "contentVersion": "1.0.0.0"
          },
          "parameters": {
              "publicIPAddressName": {
                "value": "[concat(variables('vnet2Name'),'-Bastion-pip')]"
              },
              "AllocationMethod": {
                "value": "Static"
              },              
              "vnetName": {
                  "value": "[variables('vnet2Name')]"
              },
              "subnetName": {
                  "value": "AzureBastionSubnet"
              },
              "location": {
                  "value": "[parameters('Location2')]"
              }
          }
      }
    },        
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2019-10-01",
      "name": "DeployWindowsRouter",
      "resourceGroup":  "[parameters('Site1RG')]",         
      "dependsOn": [
        "OnPremVNet"
      ],      
      "properties": {
          "mode": "Incremental",
          "templateLink": {
              "uri": "[uri(parameters('_artifactsLocation'), concat('linkedtemplates/2nics-1disk-vm.json', parameters('_artifactsLocationSasToken')))]",
              "contentVersion": "1.0.0.0"
          },
          "parameters": {
              "computerName": {
                  "value": "[variables('routername')]"
              },
              "OutsideIP": {
                  "value": "[variables('router-Outside-IP')]"
              },
              "InsideIP": {
                  "value": "[variables('router-Inside-IP')]"
              },              
              "Publisher": {
                  "value": "MicrosoftWindowsServer"
              },
              "Offer": {
                  "value": "WindowsServer"
              },
              "OSVersion": {
                "value": "[parameters('ROUTEROSVersion')]"
              },              
              "LicenseType": {
                "value": "[parameters('WindowsServerLicenseType')]"
              },            
              "VMSize": {
                "value": "[parameters('ROUTERVMSize')]"
              },
              "vnetName": {
                "value": "[variables('vnet1Name')]"
              },            
              "subnet1Name": {
                "value": "[variables('vnet1subnet1Name')]"
              },      
              "subnet2Name": {
                "value": "[variables('vnet1subnet2Name')]"
              },                                                                                                                                 
              "adminUsername": {
                "value": "[parameters('adminUsername')]"
              },                                                                                                            
              "adminPassword": {
                "value": "[parameters('adminPassword')]"
              },                                                                                                                                        
              "location": {
                  "value": "[deployment().Location]"
              }
          }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2019-10-01",
      "name": "DeployOnPremVM",  
      "resourceGroup":  "[parameters('Site1RG')]",            
      "dependsOn": [
        "DeployWindowsRouter"
      ],      
      "properties": {
          "mode": "Incremental",
          "templateLink": {
              "uri": "[uri(parameters('_artifactsLocation'), concat('linkedtemplates/1nic-1disk-vm.json', parameters('_artifactsLocationSasToken')))]",
              "contentVersion": "1.0.0.0"
          },
          "parameters": {
              "computerName": {
                  "value": "[variables('opvmname')]"
              },
              "computerIP": {
                  "value": "[variables('opvmIP')]"
              },
              "Publisher": {
                  "value": "MicrosoftWindowsServer"
              },
              "Offer": {
                  "value": "WindowsServer"
              },
              "OSVersion": {
                "value": "[parameters('OnPremOSVersion')]"
              },              
              "LicenseType": {
                "value": "[parameters('WindowsServerLicenseType')]"
              },            
              "VMSize": {
                "value": "[parameters('OnPremVMSize')]"
              },
              "vnetName": {
                "value": "[variables('vnet1Name')]"
              },            
              "subnetName": {
                "value": "[variables('vnet1subnet2Name')]"
              },            
              "adminUsername": {
                "value": "[parameters('adminUsername')]"
              },                                                                                                            
              "adminPassword": {
                "value": "[parameters('adminPassword')]"
              },                                                                                                                                        
              "location": {
                  "value": "[deployment().Location]"
              }
          }
      }
    },        
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2019-10-01",
      "name": "deploynsg1",
      "resourceGroup":  "[parameters('Site1RG')]",               
      "dependsOn": [
        "DeployWindowsRouter"    
      ],      
      "properties": {
          "mode": "Incremental",
          "templateLink": {
              "uri": "[uri(parameters('_artifactsLocation'), concat('linkedtemplates/NetworkSecurityGroup.json', parameters('_artifactsLocationSasToken')))]",
              "contentVersion": "1.0.0.0"
          },
          "parameters": {
              "NetworkSecurityGroupname": {
                  "value": "[variables('NSG1Name')]"
              },                                                                                                      
              "RouterPublicIP": {
                  "value": "[variables('router-Outside-IP')]"
              },                                                                                                      
              "location": {
                  "value": "[deployment().Location]"
              }
          }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2019-10-01",
      "name": "updatevnet1nsg",
      "resourceGroup":  "[parameters('Site1RG')]",               
      "dependsOn": [
        "deploynsg1"
      ],            
      "properties": {
          "mode": "Incremental",
          "templateLink": {
              "uri": "[uri(parameters('_artifactsLocation'), concat('linkedtemplates/updateonpremvnetnsg.json', parameters('_artifactsLocationSasToken')))]",
              "contentVersion": "1.0.0.0"
          },
          "parameters": {
              "vnetName": {
                  "value": "[variables('vnet1Name')]"
              },
              "vnetprefix": {
                  "value": "[variables('vnet1Prefix')]"
              },
              "subnet1Name": {
                "value": "[variables('vnet1subnet1Name')]"
              },                                                                                                            
              "subnet1Prefix": {
                "value": "[variables('vnet1subnet1Prefix')]"
              }, 
              "subnet2Name": {
                "value": "[variables('vnet1subnet2Name')]"
              },                                                                                                            
              "subnet2Prefix": {
                "value": "[variables('vnet1subnet2Prefix')]"
              },               
              "BastionsubnetPrefix": {
                "value": "[variables('vnet1BastionsubnetPrefix')]"
              },                           
              "NetworkSecurityGroupname": {
                  "value": "[variables('NSG1Name')]"
              },                                                                                                                                                                                                                              
              "location": {
                  "value": "[deployment().Location]"
              }
          }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2019-10-01",
      "name": "AddWindowsRouterPIP",
      "resourceGroup":  "[parameters('Site1RG')]",         
      "dependsOn": [
        "updatevnet1nsg"
      ],      
      "properties": {
          "mode": "Incremental",
          "templateLink": {
              "uri": "[uri(parameters('_artifactsLocation'), concat('linkedtemplates/2nics-1disk-vm-pip.json', parameters('_artifactsLocationSasToken')))]",
              "contentVersion": "1.0.0.0"
          },
          "parameters": {
              "computerName": {
                  "value": "[variables('routername')]"
              },
              "OutsideIP": {
                  "value": "[variables('router-Outside-IP')]"
              },
              "InsideIP": {
                  "value": "[variables('router-Inside-IP')]"
              },              
              "Publisher": {
                  "value": "MicrosoftWindowsServer"
              },
              "Offer": {
                  "value": "WindowsServer"
              },
              "OSVersion": {
                "value": "[parameters('ROUTEROSVersion')]"
              },              
              "LicenseType": {
                "value": "[parameters('WindowsServerLicenseType')]"
              },            
              "VMSize": {
                "value": "[parameters('ROUTERVMSize')]"
              },
              "vnetName": {
                "value": "[variables('vnet1Name')]"
              },            
              "subnet1Name": {
                "value": "[variables('vnet1subnet1Name')]"
              },      
              "subnet2Name": {
                "value": "[variables('vnet1subnet2Name')]"
              },                                                                                                                                 
              "adminUsername": {
                "value": "[parameters('adminUsername')]"
              },                                                                                                            
              "adminPassword": {
                "value": "[parameters('adminPassword')]"
              },                                                                                                                                        
              "location": {
                  "value": "[deployment().Location]"
              }
          }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2019-10-01",
      "name": "InstallRRAS",
      "resourceGroup":  "[parameters('Site1RG')]",
      "dependsOn": [
        "AddWindowsRouterPIP"             
      ],              
      "properties": {
          "mode": "Incremental",
          "templateLink": {
              "uri": "[uri(parameters('_artifactsLocation'), concat('linkedtemplates/rras.json', parameters('_artifactsLocationSasToken')))]",
              "contentVersion": "1.0.0.0"
          },
          "parameters": {
              "computerName": {
                  "value": "[variables('routername')]"
              },
              "_artifactsLocation": {
                "value": "[parameters('_artifactsLocation')]"
              },                                                                                                            
              "_artifactsLocationSasToken": {
                "value": "[parameters('_artifactsLocationSasToken')]"
              },                
              "location": {
                  "value": "[deployment().Location]"
              }              
          }
      }
    },    
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2019-10-01",
      "name": "restartgw",
      "resourceGroup":  "[parameters('Site1RG')]",      
      "dependsOn": [
        "InstallRRAS"
      ],            
      "properties": {
          "mode": "Incremental",
          "templateLink": {
              "uri": "[uri(parameters('_artifactsLocation'), concat('linkedtemplates/restartvm.json', parameters('_artifactsLocationSasToken')))]",
              "contentVersion": "1.0.0.0"
          },
          "parameters": {
              "computerName": {
                  "value": "[variables('routername')]"
              },
              "_artifactsLocation": {
                "value": "[parameters('_artifactsLocation')]"
              },                                                                                                            
              "_artifactsLocationSasToken": {
                "value": "[parameters('_artifactsLocationSasToken')]"
              },                                                                                                                                                                                                                                                                                                                         
              "location": {
                  "value": "[deployment().location]"
              }
          }
      }
    },    
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2019-10-01",
      "name": "AzureVNetVNG-pip",
      "resourceGroup":  "[parameters('Site2RG')]",
      "dependsOn": [
        "AzureVNetVNG",
        "AddWindowsRouterPIP"        
      ],              
      "properties": {
          "mode": "Incremental",
          "templateLink": {
              "uri": "[uri(parameters('_artifactsLocation'), concat('linkedtemplates/vpngateway-pip.json', parameters('_artifactsLocationSasToken')))]",
              "contentVersion": "1.0.0.0"
          },
          "parameters": {
              "Name": {
                  "value": "[variables('vnet2VNGName')]"
              },
              "vnetName": {
                  "value": "[variables('vnet2Name')]"
              },            
              "location": {
                  "value": "[parameters('Location2')]"
              }
          }
      }
    },            
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2019-10-01",
      "name": "OnPremVNetLNG",
      "resourceGroup":  "[parameters('Site2RG')]",
      "dependsOn": [
        "AddWindowsRouterPIP"        
      ],              
      "properties": {
          "mode": "Incremental",
          "templateLink": {
              "uri": "[uri(parameters('_artifactsLocation'), concat('linkedtemplates/lgateway.json', parameters('_artifactsLocationSasToken')))]",
              "contentVersion": "1.0.0.0"
          },
          "parameters": {
              "Name": {
                  "value": "[variables('vnet1LNGName')]"
              },
              "SubnetPrefix": {
                  "value": "[variables('vnet1Prefix')]"
              },           
              "RemoteGatewayIP": {
                  "value": "[reference('AddWindowsRouterPIP').outputs.PublicIP.value]"
              },                           
              "location": {
                  "value": "[parameters('Location2')]"
              }
          }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2019-10-01",
      "name": "CreateConnectionFromAzuretoOnPrem",
      "resourceGroup":  "[parameters('Site2RG')]",
      "dependsOn": [
        "OnPremVNetLNG",
        "AzureVNetVNG-pip"                
      ],              
      "properties": {
          "mode": "Incremental",
          "templateLink": {
              "uri": "[uri(parameters('_artifactsLocation'), concat('linkedtemplates/connection.json', parameters('_artifactsLocationSasToken')))]",
              "contentVersion": "1.0.0.0"
          },
          "parameters": {
              "ConnectionName": {
                  "value": "[variables('ConnectionName')]"
              },
              "VNGName": {
                  "value": "[variables('vnet2VNGName')]"
              },           
              "LNGName": {
                  "value": "[variables('vnet1LNGName')]"
              },             
              "SharedKey": {
                  "value": "[parameters('SharedKey')]"
              },             
              "location": {
                  "value": "[parameters('Location2')]"
              }
          }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2019-10-01",
      "name": "ConfigureVPN",
      "resourceGroup":  "[parameters('Site1RG')]",
      "dependsOn": [
        "OnPremVNetLNG",
        "InstallRRAS",
        "restartgw",
        "AzureVNetVNG-pip"                
      ],           
      "properties": {
          "mode": "Incremental",
          "templateLink": {
              "uri": "[uri(parameters('_artifactsLocation'), concat('linkedtemplates/configvpn.json', parameters('_artifactsLocationSasToken')))]",
              "contentVersion": "1.0.0.0"
          },
          "parameters": {
              "computerName": {
                  "value": "[variables('routername')]"
              },
              "TimeZone": {
                "value": "[parameters('TimeZone')]"
              },
              "RemoteGatewayIP": {
                  "value": "[reference('AzureVNetVNG-pip').outputs.PublicIP.value]"
              },             
              "LocalAddressPrefix": {
                "value": "[variables('vnet2Prefix')]"
              },       
              "SharedKey": {
                "value": "[parameters('SharedKey')]"
              },
              "adminUsername": {
                "value": "[parameters('adminUsername')]"
              },                                                                                                            
              "adminPassword": {
                "value": "[parameters('adminPassword')]"
              },              
              "_artifactsLocation": {
                "value": "[parameters('_artifactsLocation')]"
              },                                                                                                            
              "_artifactsLocationSasToken": {
                "value": "[parameters('_artifactsLocationSasToken')]"
              },                
              "location": {
                  "value": "[deployment().Location]"
              }              
          }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2019-10-01",
      "name": "CreateRouteTable",
      "resourceGroup":  "[parameters('Site1RG')]",
      "dependsOn": [
        "OnPremVNet",
        "ConfigureVPN"                
      ],              
      "properties": {
          "mode": "Incremental",
          "templateLink": {
              "uri": "[uri(parameters('_artifactsLocation'), concat('linkedtemplates/routetable.json', parameters('_artifactsLocationSasToken')))]",
              "contentVersion": "1.0.0.0"
          },
          "parameters": {
              "Name": {
                  "value": "[variables('routeTableName')]"
              },
              "SubnetPrefix": {
                  "value": "[variables('vnet2Prefix')]"
              },           
              "RemoteGatewayIP": {
                  "value": "[variables('router-Inside-IP')]"
              },                        
              "location": {
                  "value": "[deployment().Location]"
              }
          }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2019-10-01",
      "name": "updatevnet1RouteTable",
      "resourceGroup":  "[parameters('Site1RG')]",               
      "dependsOn": [
        "CreateRouteTable"
      ],            
      "properties": {
          "mode": "Incremental",
          "templateLink": {
              "uri": "[uri(parameters('_artifactsLocation'), concat('linkedtemplates/updateonpremvnetroutetable.json', parameters('_artifactsLocationSasToken')))]",
              "contentVersion": "1.0.0.0"
          },
          "parameters": {
              "vnetName": {
                  "value": "[variables('vnet1Name')]"
              },
              "vnetprefix": {
                  "value": "[variables('vnet1Prefix')]"
              },
              "subnet1Name": {
                "value": "[variables('vnet1subnet1Name')]"
              },                                                                                                            
              "subnet1Prefix": {
                "value": "[variables('vnet1subnet1Prefix')]"
              }, 
              "subnet2Name": {
                "value": "[variables('vnet1subnet2Name')]"
              },                                                                                                            
              "subnet2Prefix": {
                "value": "[variables('vnet1subnet2Prefix')]"
              },
              "NetworkSecurityGroupname": {
                  "value": "[variables('NSG1Name')]"
              },                             
              "BastionsubnetPrefix": {
                "value": "[variables('vnet1BastionsubnetPrefix')]"
              },                           
              "RouteTableName": {
                  "value": "[variables('routeTableName')]"
              },                                                                                                                                                                                                                              
              "location": {
                  "value": "[deployment().Location]"
              }
          }
      }
    }                                                                                                                                                                                                                                                                     
  ]
}