{
  "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptiondeploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "ResourceGroup1": {
      "type": "string",
      "defaultValue": "NW-ConnectionMonitor-01",
      "metadata": {
        "description": "Resource Groups"
      }
    },
    "ResourceGroup2": {
      "type": "string",
      "defaultValue": "NW-ConnectionMonitor-02",
      "metadata": {
        "description": "Resource Groups"
      }
    },   
    "Location2": {
      "type": "string",
      "defaultValue": "USGovTexas", 
      "metadata": {
        "description": "Choose Region (Example: USGovTexas)"
      }
    },
    "TimeZone": {
      "type": "string",
      "defaultValue": "Eastern Standard Time",
      "allowedValues": [
        "Afghanistan Standard Time",
        "Alaskan Standard Time",
        "Aleutian Standard Time",
        "Altai Standard Time",
        "Arab Standard Time",
        "Arabian Standard Time",
        "Arabic Standard Time",
        "Argentina Standard Time",
        "Astrakhan Standard Time",
        "Atlantic Standard Time",
        "AUS Central Standard Time",
        "Aus Central W. Standard Time",
        "AUS Eastern Standard Time",
        "Azerbaijan Standard Time",
        "Azores Standard Time",
        "Bahia Standard Time",
        "Bangladesh Standard Time",
        "Belarus Standard Time",
        "Bougainville Standard Time",
        "Canada Central Standard Time",
        "Cape Verde Standard Time",
        "Caucasus Standard Time",
        "Cen. Australia Standard Time",
        "Central America Standard Time",
        "Central Asia Standard Time",
        "Central Brazilian Standard Time",
        "Central Europe Standard Time",
        "Central European Standard Time",
        "Central Pacific Standard Time",
        "Central Standard Time (Mexico)",
        "Central Standard Time",
        "Chatham Islands Standard Time",
        "China Standard Time",
        "Cuba Standard Time",
        "Dateline Standard Time",
        "E. Africa Standard Time",
        "E. Australia Standard Time",
        "E. Europe Standard Time",
        "E. South America Standard Time",
        "Easter Island Standard Time",
        "Eastern Standard Time (Mexico)",
        "Eastern Standard Time",
        "Egypt Standard Time",
        "Ekaterinburg Standard Time",
        "Fiji Standard Time",
        "FLE Standard Time",
        "Georgian Standard Time",
        "GMT Standard Time",
        "Greenland Standard Time",
        "Greenwich Standard Time",
        "GTB Standard Time",
        "Haiti Standard Time",
        "Hawaiian Standard Time",
        "India Standard Time",
        "Iran Standard Time",
        "Israel Standard Time",
        "Jordan Standard Time",
        "Kaliningrad Standard Time",
        "Korea Standard Time",
        "Libya Standard Time",
        "Line Islands Standard Time",
        "Lord Howe Standard Time",
        "Magadan Standard Time",
        "Magallanes Standard Time",
        "Marquesas Standard Time",
        "Mauritius Standard Time",
        "Middle East Standard Time",
        "Montevideo Standard Time",
        "Morocco Standard Time",
        "Mountain Standard Time (Mexico)",
        "Mountain Standard Time",
        "Myanmar Standard Time",
        "N. Central Asia Standard Time",
        "Namibia Standard Time",
        "Nepal Standard Time",
        "New Zealand Standard Time",
        "Newfoundland Standard Time",
        "Norfolk Standard Time",
        "North Asia East Standard Time",
        "North Asia Standard Time",
        "North Korea Standard Time",
        "Omsk Standard Time",
        "Pacific SA Standard Time",
        "Pacific Standard Time (Mexico)",
        "Pacific Standard Time",
        "Pakistan Standard Time",
        "Paraguay Standard Time",
        "Qyzylorda Standard Time",
        "Romance Standard Time",
        "Russia Time Zone 10",
        "Russia Time Zone 11",
        "Russia Time Zone 3",
        "Russian Standard Time",
        "SA Eastern Standard Time",
        "SA Pacific Standard Time",
        "SA Western Standard Time",
        "Saint Pierre Standard Time",
        "Sakhalin Standard Time",
        "Samoa Standard Time",
        "Sao Tome Standard Time",
        "Saratov Standard Time",
        "SE Asia Standard Time",
        "Singapore Standard Time",
        "South Africa Standard Time",
        "Sri Lanka Standard Time",
        "Sudan Standard Time",
        "Syria Standard Time",
        "Taipei Standard Time",
        "Tasmania Standard Time",
        "Tocantins Standard Time",
        "Tokyo Standard Time",
        "Tomsk Standard Time",
        "Tonga Standard Time",
        "Transbaikal Standard Time",
        "Turkey Standard Time",
        "Turks And Caicos Standard Time",
        "Ulaanbaatar Standard Time",
        "US Eastern Standard Time",
        "US Mountain Standard Time",
        "UTC",
        "UTC+12",
        "UTC+13",
        "UTC-02",
        "UTC-08",
        "UTC-09",
        "UTC-11",
        "Venezuela Standard Time",
        "Vladivostok Standard Time",
        "Volgograd Standard Time",
        "W. Australia Standard Time",
        "W. Central Africa Standard Time",
        "W. Europe Standard Time",
        "W. Mongolia Standard Time",
        "West Asia Standard Time",
        "West Bank Standard Time",
        "West Pacific Standard Time",
        "Yakutsk Standard Time"
      ],      
      "metadata": {
          "description": "Time Zone"
      }
    },    
    "AutoShutdownEnabled": {
      "type": "string",
      "defaultValue": "No",
      "allowedValues": [
        "Yes",
        "No"
      ],      
      "metadata": {
          "description": "Enabled Auto Shutdown.  !!!If Enabled, AutoShutdownEmail MUST be added!!!!"
      }
    },        
    "AutoShutdownTime": {
      "type": "string",
      "defaultValue": "2000",      
      "metadata": {
          "description": "24-Hour Clock Time for Auto-Shutdown Example: 1900 = 7PM"
      }
    },                                
    "AutoShutdownEmail": {
      "type": "string",
      "metadata": {
          "description": "Auto-Shutdown notification Email Example:  user@domain.com"
      }
    },                                
    "WorkspaceLocation": {
      "type": "string",
      "defaultValue": "USGovVirginia",
      "allowedValues": [
        "USGovVirginia",
        "USGovArizona"
      ],      
      "metadata": {
        "description": "Choose a Log Analytics Workspace Location"
      }
    },         
    "adminUsername": {
      "type": "string",
      "metadata": {
        "description": "The name of the Administrator of the new VM and Domain"
      }
    },
    "adminPassword": {
      "type": "securestring",
      "metadata": {
        "description": "The password for the Administrator account of the new VM and Domain"
      }
    },    
    "WindowsServerLicenseType": {
      "type": "string",
      "defaultValue": "None",
      "allowedValues": [
        "None",
        "Windows_Server"
      ],      
      "metadata": {
          "description": "Windows Server OS License Type"
      }
    },      
    "NamingConvention": {
      "type": "string",
      "defaultValue": "khl",
      "maxLength": 4,      
      "metadata": {
        "description": "Environment Naming Convention"
      }
    },                    
    "vnet1ID": {
      "type": "string",
      "defaultValue": "10.1",
      "metadata": {
        "description": "VNet1 Prefix"
      }
    },    
    "vnet2ID": {
      "type": "string",
      "defaultValue": "10.2",
      "metadata": {
        "description": "VNet1 Prefix"
      }
    },           
    "VM1OSVersion": {
      "type": "string",
      "defaultValue": "2022-Datacenter",
      "allowedValues": [
        "2022-Datacenter",
        "2019-Datacenter",
        "2016-Datacenter"
      ],
      "metadata": {
          "description": "VM1 OS Version"
      }
    },    
    "VM2OSVersion": {
      "type": "string",
      "defaultValue": "2022-Datacenter",
      "allowedValues": [
        "2022-Datacenter",
        "2019-Datacenter",
        "2016-Datacenter"
      ],
      "metadata": {
          "description": "VM2 OS Version"
      }
    },    
    "VM1VMSize": {
      "type": "string",
      "defaultValue": "Standard_D2s_v3",
      "metadata": {
          "description": "VM1 VMSize"
      }
    },            
    "VM2VMSize": {
      "type": "string",
      "defaultValue": "Standard_D2s_v3",
      "metadata": {
          "description": "VM2 VMSize"
      }
    },   
    "UniqueID": {
        "type": "string",
        "defaultValue": "1234567890x1",
        "metadata": {
            "description": "Unique Identifier"
        }
    },                  
    "_artifactsLocation": {
      "type": "string",
      "metadata": {
          "description": "The location of resources, such as templates and DSC modules, that the template depends on"
      },
      "defaultValue": "[deployment().properties.templateLink.uri]"
    },
    "_artifactsLocationSasToken": {
        "type": "securestring",
        "metadata": {
            "description": "Auto-generated token to access _artifactsLocation. Leave it blank unless you need to provide your own value."
        },
        "defaultValue": ""
    }
  },
  "variables": { 
    "vnet1Name": "[concat(parameters('NamingConvention'),'-VNet1')]",
    "vnet1Prefix": "[concat(parameters('vnet1ID'),'.0.0/16')]",
    "vnet1subnet1Name": "[concat(parameters('NamingConvention'),'-VNet1-Subnet1')]",    
    "vnet1subnet1Prefix": "[concat(parameters('vnet1ID'),'.1.0/24')]",    
    "vnet1subnet2Name": "[concat(parameters('NamingConvention'),'-VNet1-Subnet2')]",   
    "vnet1subnet2Prefix": "[concat(parameters('vnet1ID'),'.2.0/24')]",    
    "vnet1BastionsubnetPrefix": "[concat(parameters('vnet1ID'),'.253.0/24')]",        
    "vnet2Name": "[concat(parameters('NamingConvention'),'-VNet2')]",    
    "vnet2Prefix": "[concat(parameters('vnet2ID'),'.0.0/16')]",
    "vnet2subnet1Name": "[concat(parameters('NamingConvention'),'-VNet2-Subnet1')]",   
    "vnet2subnet1Prefix": "[concat(parameters('vnet2ID'),'.1.0/24')]",    
    "vnet2subnet2Name": "[concat(parameters('NamingConvention'),'-VNet2-Subnet2')]",    
    "vnet2subnet2Prefix": "[concat(parameters('vnet2ID'),'.2.0/24')]",    
    "vnet2BastionsubnetPrefix": "[concat(parameters('vnet2ID'),'.253.0/24')]",        
    "vm1name": "[concat(parameters('NamingConvention'),'-vm-01')]",           
    "vm1IP": "[concat(parameters('vnet1ID'),'.1.',variables('vm1lastoctet'))]",        
    "vm2name": "[concat(parameters('NamingConvention'),'-vm-02')]",           
    "vm2IP": "[concat(parameters('vnet2ID'),'.1.',variables('vm2lastoctet'))]",            
    "vm1lastoctet": "101",        
    "vm2lastoctet": "101",        
    "WorkSpaceName": "[concat(parameters('NamingConvention'),'-LAW-',parameters('UniqueID'))]",
    "CMName": "[concat(parameters('NamingConvention'),'-CM-',parameters('UniqueID'))]",    
    "ManagedIDName": "[concat(parameters('NamingConvention'),'-ManagedID-',parameters('UniqueID'))]",
    "Contributor": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Authorization/roleDefinitions/', 'b24988ac-6180-42a0-ab88-20f7382dd24c')]"
  },  
  "resources": [
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2019-10-01",
      "name": "CreateRG1",
      "location": "[deployment().location]",              
      "properties": {
          "mode": "Incremental",
          "templateLink": {
              "uri": "[uri(parameters('_artifactsLocation'), concat('linkedtemplates/resourcegroup.json', parameters('_artifactsLocationSasToken')))]",
              "contentVersion": "1.0.0.0"
          },
          "parameters": {
              "ResourceGroupName": {
                  "value": "[parameters('ResourceGroup1')]"
              },
              "location": {
                  "value": "[deployment().Location]"
              }            
          }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2019-10-01",
      "name": "CreateRG2",
      "location": "[parameters('Location2')]",              
      "properties": {
          "mode": "Incremental",
          "templateLink": {
              "uri": "[uri(parameters('_artifactsLocation'), concat('linkedtemplates/resourcegroup.json', parameters('_artifactsLocationSasToken')))]",
              "contentVersion": "1.0.0.0"
          },
          "parameters": {
              "ResourceGroupName": {
                  "value": "[parameters('ResourceGroup2')]"
              },
              "location": {
                  "value": "[parameters('Location2')]"
              }            
          }
      }
    },    
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2019-10-01",
      "name": "DeployLogAnalysticsWorkspace",
      "resourceGroup":  "[parameters('ResourceGroup1')]",    
      "dependsOn": [
        "CreateRG1"
      ],      
      "properties": {
          "mode": "Incremental",
          "templateLink": {
              "uri": "[uri(parameters('_artifactsLocation'), concat('linkedtemplates/loganalyticsworkspace.json', parameters('_artifactsLocationSasToken')))]",
              "contentVersion": "1.0.0.0"
          },
          "parameters": {
              "workspaceName": {
                  "value": "[variables('WorkSpaceName')]"
              },
              "location": {
                  "value": "[parameters('WorkspaceLocation')]"
              },
              "sku": {
                  "value": "PerGB2018"
              }            
          }
      }
    },     
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2019-10-01",
      "name": "VNet1",
      "resourceGroup":  "[parameters('ResourceGroup1')]",    
      "dependsOn": [
        "CreateRG1"
      ],            
      "properties": {
          "mode": "Incremental",
          "templateLink": {
              "uri": "[uri(parameters('_artifactsLocation'), concat('linkedtemplates/vnet.json', parameters('_artifactsLocationSasToken')))]",
              "contentVersion": "1.0.0.0"
          },
          "parameters": {
              "vnetName": {
                  "value": "[variables('vnet1Name')]"
              },
              "vnetprefix": {
                  "value": "[variables('vnet1Prefix')]"
              },
              "subnet1Name": {
                  "value": "[variables('vnet1subnet1Name')]"
              },
              "subnet1Prefix": {
                  "value": "[variables('vnet1subnet1Prefix')]"
              },
              "subnet2Name": {
                "value": "[variables('vnet1subnet2Name')]"
              },
              "subnet2Prefix": {
                "value": "[variables('vnet1subnet2Prefix')]"
              },              
              "BastionsubnetPrefix": {
                "value": "[variables('vnet1BastionsubnetPrefix')]"
              },              
              "location": {
                  "value": "[deployment().location]"
              }
          }
      }
    },    
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2019-10-01",
      "name": "VNet2",    
      "resourceGroup":  "[parameters('ResourceGroup2')]",    
      "dependsOn": [
        "CreateRG2"
      ],                  
      "properties": {
          "mode": "Incremental",
          "templateLink": {
              "uri": "[uri(parameters('_artifactsLocation'), concat('linkedtemplates/vnet.json', parameters('_artifactsLocationSasToken')))]",
              "contentVersion": "1.0.0.0"
          },
          "parameters": {
              "vnetName": {
                  "value": "[variables('vnet2Name')]"
              },
              "vnetprefix": {
                  "value": "[variables('vnet2Prefix')]"
              },
              "subnet1Name": {
                  "value": "[variables('vnet2subnet1Name')]"
              },
              "subnet1Prefix": {
                  "value": "[variables('vnet2subnet1Prefix')]"
              },
              "subnet2Name": {
                "value": "[variables('vnet2subnet2Name')]"
              },
              "subnet2Prefix": {
                "value": "[variables('vnet2subnet2Prefix')]"
              },              
              "BastionsubnetPrefix": {
                "value": "[variables('vnet2BastionsubnetPrefix')]"
              },              
              "location": {
                  "value": "[parameters('Location2')]"
              }
          }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2019-10-01",
      "name": "PeeringToSite2",
      "resourceGroup":  "[parameters('ResourceGroup1')]",                      
      "dependsOn": [
        "VNet1",
        "VNet2"
      ],            
      "properties": {
          "mode": "Incremental",
          "templateLink": {
              "uri": "[uri(parameters('_artifactsLocation'), concat('linkedtemplates/peering.json', parameters('_artifactsLocationSasToken')))]",
              "contentVersion": "1.0.0.0"
          },
          "parameters": {
              "SourceVNetName": {
                "value": "[variables('vnet1Name')]"
              },
              "TargetVNetName": {
                "value": "[variables('vnet2Name')]"
              },              
              "TargetVNetRG": {
                "value": "[parameters('ResourceGroup2')]"
              },                            
              "allowVirtualNetworkAccess": {
                "value": "true"
              },                                                                                                                                                                                                                                                                                                           
              "allowForwardedTraffic": {
                "value": "true"
              },                                                                                                                                                                                                                                                                                                           
              "allowGatewayTransit": {
                "value": "false"
              },
              "useRemoteGateways": {
                "value": "false"
              }
              "location": {
                  "value": "[deployment().location]"
              }
          }
      }
    },    
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2019-10-01",
      "name": "PeeringToSite1",
      "resourceGroup":  "[parameters('ResourceGroup2')]",                      
      "dependsOn": [
        "VNet1",
        "VNet2",        
        "PeeringToSite2"
      ],            
      "properties": {
          "mode": "Incremental",
          "templateLink": {
              "uri": "[uri(parameters('_artifactsLocation'), concat('linkedtemplates/peering.json', parameters('_artifactsLocationSasToken')))]",
              "contentVersion": "1.0.0.0"
          },
          "parameters": {
              "SourceVNetName": {
                "value": "[variables('vnet2Name')]"
              },
              "TargetVNetName": {
                "value": "[variables('vnet1Name')]"
              },
              "TargetVNetRG": {
                "value": "[parameters('ResourceGroup1')]"
              },                                                      
              "allowVirtualNetworkAccess": {
                "value": "true"
              },                                                                                                                                                                                                                                                                                                           
              "allowForwardedTraffic": {
                "value": "true"
              },                                                                                                                                                                                                                                                                                                           
              "allowGatewayTransit": {
                "value": "false"
              },
              "useRemoteGateways": {
                "value": "false"
              }
              "location": {
                  "value": "[parameters('Location2')]"
              }
          }
      }
    },      
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2019-10-01",
      "name": "BastionHost1",
      "resourceGroup":  "[parameters('ResourceGroup1')]",          
      "dependsOn": [
        "PeeringToSite2",
        "PeeringToSite1"
      ],
      "properties": {
          "mode": "Incremental",
          "templateLink": {
              "uri": "[uri(parameters('_artifactsLocation'), concat('linkedtemplates/bastionhost.json', parameters('_artifactsLocationSasToken')))]",
              "contentVersion": "1.0.0.0"
          },
          "parameters": {
              "publicIPAddressName": {
                "value": "[concat(variables('vnet1Name'),'-Bastion-pip')]"
              },
              "AllocationMethod": {
                "value": "Static"
              },              
              "vnetName": {
                  "value": "[variables('vnet1Name')]"
              },
              "subnetName": {
                  "value": "AzureBastionSubnet"
              },
              "location": {
                  "value": "[deployment().location]"
              }
          }
      }
    },                    
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2019-10-01",
      "name": "DeployVNet1VM",
      "resourceGroup":  "[parameters('ResourceGroup1')]",                
      "dependsOn": [
        "PeeringToSite2",
        "PeeringToSite1"
      ],      
      "properties": {
          "mode": "Incremental",
          "templateLink": {
              "uri": "[uri(parameters('_artifactsLocation'), concat('linkedtemplates/1nic-1disk-vm.json', parameters('_artifactsLocationSasToken')))]",
              "contentVersion": "1.0.0.0"
          },
          "parameters": {
              "computerName": {
                  "value": "[variables('vm1name')]"
              },
              "computerIP": {
                  "value": "[variables('vm1IP')]"
              },
              "Publisher": {
                  "value": "MicrosoftWindowsServer"
              },
              "Offer": {
                  "value": "WindowsServer"
              },
              "OSVersion": {
                "value": "[parameters('VM1OSVersion')]"
              },              
              "LicenseType": {
                "value": "[parameters('WindowsServerLicenseType')]"
              },           
              "VMSize": {
                "value": "[parameters('VM1VMSize')]"
              },
              "vnetName": {
                "value": "[variables('vnet1Name')]"
              },            
              "subnetName": {
                "value": "[variables('vnet1subnet1Name')]"
              },            
              "adminUsername": {
                "value": "[parameters('adminUsername')]"
              },                                                                                                            
              "adminPassword": {
                "value": "[parameters('adminPassword')]"
              }, 
              "TimeZone": {
                  "value": "[parameters('TimeZone')]"
              },               
              "AutoShutdownEnabled": {
                  "value": "[parameters('AutoShutdownEnabled')]"
              },                            
              "AutoShutdownTime": {
                  "value": "[parameters('AutoShutdownTime')]"
              },              
              "AutoShutdownEmail": {
                  "value": "[parameters('AutoShutdownEmail')]"
              },                                                                                                                                                                                                                                                                                                           
              "location": {
                  "value": "[deployment().location]"
              }
          }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2019-10-01",
      "name": "DeployVNet1VM-NW",
      "resourceGroup":  "[parameters('ResourceGroup1')]",                
      "dependsOn": [
        "DeployVNet1VM"
      ],            
      "properties": {
          "mode": "Incremental",
          "templateLink": {
              "uri": "[uri(parameters('_artifactsLocation'), concat('linkedtemplates/networkwatcher.json', parameters('_artifactsLocationSasToken')))]",
              "contentVersion": "1.0.0.0"
          },
          "parameters": {
              "computerName": {
                  "value": "[variables('vm1name')]"
              },
              "location": {
                "value": "[deployment().location]"   
            }           
          }
      }
    },         
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2019-10-01",
      "name": "deployVNet2VM",
      "resourceGroup":  "[parameters('ResourceGroup2')]",                      
      "dependsOn": [
        "PeeringToSite2",
        "PeeringToSite1"
      ],      
      "properties": {
          "mode": "Incremental",
          "templateLink": {
              "uri": "[uri(parameters('_artifactsLocation'), concat('linkedtemplates/1nic-1disk-vm.json', parameters('_artifactsLocationSasToken')))]",
              "contentVersion": "1.0.0.0"
          },
          "parameters": {
              "computerName": {
                  "value": "[variables('vm2name')]"
              },
              "computerIP": {
                  "value": "[variables('vm2IP')]"
              },
              "Publisher": {
                  "value": "MicrosoftWindowsServer"
              },
              "Offer": {
                  "value": "WindowsServer"
              },
              "OSVersion": {
                "value": "[parameters('VM2OSVersion')]"
              },              
              "LicenseType": {
                "value": "[parameters('WindowsServerLicenseType')]"
              },            
              "VMSize": {
                "value": "[parameters('VM2VMSize')]"
              },
              "vnetName": {
                "value": "[variables('vnet2Name')]"
              },            
              "subnetName": {
                "value": "[variables('vnet2subnet1Name')]"
              },            
              "adminUsername": {
                "value": "[parameters('adminUsername')]"
              },                                                                                                            
              "adminPassword": {
                "value": "[parameters('adminPassword')]"
              },
              "TimeZone": {
                  "value": "[parameters('TimeZone')]"
              },               
              "AutoShutdownEnabled": {
                  "value": "[parameters('AutoShutdownEnabled')]"
              },                            
              "AutoShutdownTime": {
                  "value": "[parameters('AutoShutdownTime')]"
              },              
              "AutoShutdownEmail": {
                  "value": "[parameters('AutoShutdownEmail')]"
              },                                                                                                                                                                                                                                                                                                           
              "location": {
                  "value": "[parameters('Location2')]"
              }
          }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2019-10-01",
      "name": "InstallIIS",
      "resourceGroup":  "[parameters('ResourceGroup2')]",                      
      "dependsOn": [
        "deployVNet2VM"
      ],      
      "properties": {
          "mode": "Incremental",
          "templateLink": {
              "uri": "[uri(parameters('_artifactsLocation'), concat('linkedtemplates/iis.json', parameters('_artifactsLocationSasToken')))]",
              "contentVersion": "1.0.0.0"
          },
          "parameters": {
              "computerName": {
                  "value": "[variables('vm2name')]"
              },           
              "location": {
                  "value": "[parameters('Location2')]"
              },                                          
              "_artifactsLocation": {
                "value": "[parameters('_artifactsLocation')]"
              },                                                                                                            
              "_artifactsLocationSasToken": {
                "value": "[parameters('_artifactsLocationSasToken')]"
              }                                                                                                                                                                                                                                                                                                                                                                                                                                                               
          }
      }
    },        
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2019-10-01",
      "name": "DeployVNet2VM-NW",
      "resourceGroup":  "[parameters('ResourceGroup2')]",                      
      "dependsOn": [
        "DeployVNet2VM",
        "InstallIIS"        
      ],            
      "properties": {
          "mode": "Incremental",
          "templateLink": {
              "uri": "[uri(parameters('_artifactsLocation'), concat('linkedtemplates/networkwatcher.json', parameters('_artifactsLocationSasToken')))]",
              "contentVersion": "1.0.0.0"
          },
          "parameters": {
              "computerName": {
                  "value": "[variables('vm2name')]"
              },
              "location": {
                "value": "[parameters('Location2')]"
            }
          }
      }
    },           
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2019-10-01",
      "name": "CreateManagedID",
      "resourceGroup":  "[parameters('ResourceGroup1')]", 
      "dependsOn": [
        "CreateRG1"
      ],                                 
      "properties": {
          "mode": "Incremental",
          "templateLink": {
              "uri": "[uri(parameters('_artifactsLocation'), concat('linkedtemplates/managedidentity.json', parameters('_artifactsLocationSasToken')))]",
              "contentVersion": "1.0.0.0"
          },
          "parameters": {
              "ManagedIDName": {
                  "value": "[variables('ManagedIDName')]"
              },
              "location": {
                  "value": "[deployment().location]"
              }
          }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2019-10-01",
      "name": "AssignManagedIDRG1",
      "resourceGroup":  "[parameters('ResourceGroup1')]",                            
      "dependsOn": [
        "CreateManagedID"
      ],        
      "properties": {
          "mode": "Incremental",
          "templateLink": {
              "uri": "[uri(parameters('_artifactsLocation'), concat('linkedtemplates/roleassignment.json', parameters('_artifactsLocationSasToken')))]",
              "contentVersion": "1.0.0.0"
          },
          "parameters": {
              "PrincipalID": {
                  "value": "[reference('CreateManagedID').outputs.manageduseridentity.value]"
              },
              "RoleDefinitionID": {
                  "value": "[variables('Contributor')]"
              },
              "roleAssignmentHash": {
                  "value": "NetworkWatcher1"
              }                                        
          }
      }
    },    
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2019-10-01",
      "name": "AssignManagedIDRG2",
      "resourceGroup":  "[parameters('ResourceGroup2')]",                            
      "dependsOn": [
        "CreateManagedID"
      ],        
      "properties": {
          "mode": "Incremental",
          "templateLink": {
              "uri": "[uri(parameters('_artifactsLocation'), concat('linkedtemplates/roleassignment.json', parameters('_artifactsLocationSasToken')))]",
              "contentVersion": "1.0.0.0"
          },
          "parameters": {
              "PrincipalID": {
                  "value": "[reference('CreateManagedID').outputs.manageduseridentity.value]"
              },
              "RoleDefinitionID": {
                  "value": "[variables('Contributor')]"
              },
              "roleAssignmentHash": {
                  "value": "NetworkWatcher2"
              }                                        
          }
      }
    },        
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2019-10-01",
      "name": "ConnectVM1",
      "resourceGroup":  "[parameters('ResourceGroup1')]",                                  
      "dependsOn": [
        "DeployLogAnalysticsWorkspace",
        "deployVNet1VM",
        "deployVNet1VM-NW",        
        "CreateManagedID",
        "AssignManagedIDRG1"
      ],      
      "properties": {
          "mode": "Incremental",
          "templateLink": {
              "uri": "[uri(parameters('_artifactsLocation'), concat('linkedtemplates/connectlaw.json', parameters('_artifactsLocationSasToken')))]",
              "contentVersion": "1.0.0.0"
          },
          "parameters": {
              "vm": {
                  "value": "[variables('vm1name')]"
              },
              "workspaceName": {
                  "value": "[variables('WorkSpaceName')]"
              },
              "VMResourceGroupName": {
                  "value": "[parameters('ResourceGroup1')]"
              },       
              "WorkspaceResourceGroup": {
                  "value": "[parameters('ResourceGroup1')]"
              },              
              "ManagedIDName": {
                  "value": "[variables('ManagedIDName')]"
              }, 
              "ScriptLocation": {
                  "value": "USGovVirginia"
              },                                           
              "Location": {
                  "value": "[deployment().location]"
              },
              "_artifactsLocation": {
                "value": "[parameters('_artifactsLocation')]"
              },                                                                                                            
              "_artifactsLocationSasToken": {
                "value": "[parameters('_artifactsLocationSasToken')]"
              }
          }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2019-10-01",
      "name": "ConnectVM2",
      "resourceGroup":  "[parameters('ResourceGroup2')]",                                  
      "dependsOn": [
        "DeployLogAnalysticsWorkspace",
        "deployVNet2VM",        
        "deployVNet2VM-NW",                
        "CreateManagedID",
        "AssignManagedIDRG1",
        "ConnectVM1"
      ],      
      "properties": {
          "mode": "Incremental",
          "templateLink": {
              "uri": "[uri(parameters('_artifactsLocation'), concat('linkedtemplates/connectlaw.json', parameters('_artifactsLocationSasToken')))]",
              "contentVersion": "1.0.0.0"
          },
          "parameters": {
              "vm": {
                  "value": "[variables('vm2name')]"
              },
              "workspaceName": {
                  "value": "[variables('WorkSpaceName')]"
              },
              "VMResourceGroupName": {
                  "value": "[parameters('ResourceGroup2')]"
              },       
              "WorkspaceResourceGroup": {
                  "value": "[parameters('ResourceGroup1')]"
              },
              "ManagedIDName": {
                  "value": "[variables('ManagedIDName')]"
              },   
              "ScriptLocation": {
                  "value": "USGovVirginia"
              },                                          
              "Location": {
                  "value": "[parameters('Location2')]"
              },
              "_artifactsLocation": {
                "value": "[parameters('_artifactsLocation')]"
              },                                                                                                            
              "_artifactsLocationSasToken": {
                "value": "[parameters('_artifactsLocationSasToken')]"
              }
          }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2019-10-01",
      "name": "DeployConnectionMonitor",
      "resourceGroup":  "NetworkWatcherRG",            
      "dependsOn": [
        "DeployLogAnalysticsWorkspace",
        "deployVNet1VM-NW",        
        "deployVNet2VM-NW",                
        "CreateManagedID",
        "AssignManagedIDRG1",
        "AssignManagedIDRG2",
        "ConnectVM1",
        "ConnectVM2"        
      ],      
      "properties": {
          "mode": "Incremental",
          "templateLink": {
              "uri": "[uri(parameters('_artifactsLocation'), concat('linkedtemplates/connectionmonitor.json', parameters('_artifactsLocationSasToken')))]",
              "contentVersion": "1.0.0.0"
          },
          "parameters": {
              "CMName": {
                  "value": "[variables('CMName')]"
              }, 
              "VM1ResourceGroupName": {
                  "value": "[parameters('ResourceGroup1')]"
              },                          
              "VM2ResourceGroupName": {
                  "value": "[parameters('ResourceGroup2')]"
              },                                         
              "SourceVMName": {
                  "value": "[variables('vm1Name')]"
              },
              "DestinationVMName": {
                  "value": "[variables('vm2Name')]"
              },                                                 
              "Location": {
                  "value": "[deployment().location]"
              }                            
          }
      }
    }                   
  ]
}